<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>8. That&#39;s a Wrap :: She Codes One Day Workshop Tutorials (new)</title>
    <link>http://localhost:1313/python/python/08_thats_a_wrap/index.html</link>
    <description>Check your code, it should look like the below.&#xA;Congratulations, you built yourself a Python game, learnt some things about turtles, and helped save the ocean.&#xA;import turtle import random # --- SETUP --- screen = turtle.Screen() screen.bgcolor(&#34;lightblue&#34;) screen.bgpic(&#39;image.gif&#39;) screen.title(&#34;Turtle Rescue Mission&#34;) screen.setup(width=600, height=600) screen.tracer(0) screen.addshape(&#34;coral.gif&#34;) screen.addshape(&#34;bag.gif&#34;) screen.addshape(&#34;can.gif&#34;) screen.addshape(&#34;bottle.gif&#34;) # --- OCEAN FACTS / MESSAGES --- ocean_facts = [ &#34;Did you know? A plastic bottle can take 450 years to decompose.&#34;, &#34;Did you know? Sea turtles often mistake plastic bags for jellyfish!&#34;, &#34;Did you know? Coral reefs support over 25% of all marine life.&#34;, &#34;Did you know? Only 9% of plastic ever produced has been recycled.&#34;, &#34;Did you know? Every minute, one garbage truck of plastic enters our oceans.&#34;, ] # --- PLAYER rescueturtle --- rescueturtle = turtle.Turtle() rescueturtle.color(&#34;pink&#34;) rescueturtle.shape(&#34;turtle&#34;) rescueturtle.penup() rescueturtle.setheading(90) rescueturtle.goto(0, -250) # --- SCORE + HEALTH --- score = 0 health = 3 score_writer = turtle.Turtle() score_writer.hideturtle() score_writer.color(&#34;white&#34;) score_writer.penup() score_writer.goto(-250, 260) health_writer = turtle.Turtle() health_writer.hideturtle() health_writer.color(&#34;lightpink&#34;) health_writer.penup() health_writer.goto(150, 260) # --- OCEAN FACT DISPLAY --- fact_writer = turtle.Turtle() fact_writer.hideturtle() fact_writer.penup() fact_writer.goto(0, -280) # Bottom of screen fact_writer.color(&#34;white&#34;) fact_writer.write(random.choice(ocean_facts), align=&#34;center&#34;, font=(&#34;Arial&#34;, 17, &#34;italic&#34;)) # --- OBJECTS IN THE OCEAN --- ocean_objects = [] def create_object(): obj = turtle.Turtle() obj.penup() obj.speed(0) obj.goto(random.randint(-280, 280), 300) # Define multiple options trash_options = [ {&#34;shape&#34;: &#34;can.gif&#34;, &#34;color&#34;: None}, {&#34;shape&#34;: &#34;bottle.gif&#34;, &#34;color&#34;: None}, {&#34;shape&#34;: &#34;bag.gif&#34;, &#34;color&#34;: None}, ] reef_options = [ {&#34;shape&#34;: &#34;coral.gif&#34;, &#34;color&#34;: None}, ] # Choose type if random.random() &lt; 0.3: obj_data = random.choice(trash_options) obj.type = &#34;trash&#34; else: obj_data = random.choice(reef_options) obj.type = &#34;reef&#34; # Apply shape and color obj.shape(obj_data[&#34;shape&#34;]) if obj_data[&#34;color&#34;]: obj.color(obj_data[&#34;color&#34;]) ocean_objects.append(obj) # --- DISPLAY UPDATER --- def update_display(): score_writer.clear() score_writer.write(&#34;Score: &#34; + str(score), font=(&#34;Arial&#34;, 16, &#34;bold&#34;)) health_writer.clear() health_writer.write(&#34;Health: &#34; + str(health), font=(&#34;Arial&#34;, 18, &#34;bold&#34;)) # --- KEYBOARD MOVEMENT --- def move_left(): x = rescueturtle.xcor() - 40 if x &lt; -280: x = -280 rescueturtle.setx(x) def move_right(): x = rescueturtle.xcor() + 40 if x &gt; 280: x = 280 rescueturtle.setx(x) screen.listen() screen.onkey(move_left, &#34;Left&#34;) screen.onkey(move_right, &#34;Right&#34;) def fall(item): global score, health item.sety(item.ycor() - 10) if item.distance(rescueturtle) &lt; 40 and item.ycor() &lt; -230: if item.type == &#34;trash&#34;: score += 1 elif item.type == &#34;reef&#34;: health -= 1 item.hideturtle() ocean_objects.remove(item) elif item.ycor() &lt; -300: item.hideturtle() ocean_objects.remove(item) # --- MAIN GAME LOOP --- def game_loop(): global score, health if random.random() &lt; 0.1: create_object() for obj in ocean_objects: fall(obj) update_display() if health &lt;= 0: game_over = turtle.Turtle() game_over.hideturtle() game_over.penup() game_over.goto(0, 0) game_over.write(&#34;ðŸ’€ GAME OVER ðŸ’€&#34;, align=&#34;center&#34;, font=(&#34;Arial&#34;, 24, &#34;bold&#34;)) else: screen.update() screen.ontimer(game_loop, 100) # --- START GAME --- update_display() game_loop() turtle.done()</description>
    <generator>Hugo</generator>
    <language>en-au</language>
    <atom:link href="http://localhost:1313/python/python/08_thats_a_wrap/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>